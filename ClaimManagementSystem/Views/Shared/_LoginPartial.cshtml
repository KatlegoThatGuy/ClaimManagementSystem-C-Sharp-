@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@using System.Security.Claims

@{
    var emailClaim = User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Email)?.Value;
    var firstNameClaim = User.Claims.FirstOrDefault(c => c.Type == "FirstName")?.Value;
    var lastNameClaim = User.Claims.FirstOrDefault(c => c.Type == "LastName")?.Value;
}

@if (User.Identity.IsAuthenticated)
{
    <div>
        <p>Welcome, @firstNameClaim @lastNameClaim!</p>
        <p>Your email: @emailClaim</p>
        <a asp-action="Logout">Logout</a>
    </div>
}
else
{
    <div>
        <a asp-action="Login">Login</a>
        <a asp-action="Register">Register</a>
    </div>
}

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
